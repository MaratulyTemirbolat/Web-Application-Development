# Generated by Django 5.1.1 on 2024-12-16 20:40

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date and time of creation')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date and time of last update')),
                ('name', models.CharField(db_index=True, max_length=100, unique=True, verbose_name='Category name')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
                'ordering': ('-updated_at',),
            },
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date and time of creation')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date and time of last update')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name="State's name")),
            ],
            options={
                'verbose_name': 'State',
                'verbose_name_plural': 'States',
                'ordering': ('-updated_at',),
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date and time of creation')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date and time of last update')),
                ('total_price', models.PositiveIntegerField(verbose_name='Final price for the order')),
                ('status', models.IntegerField(choices=[(0, 'Pending'), (1, 'Accepted'), (2, 'On the way'), (3, 'Closed')], verbose_name='Order status ')),
                ('purchaser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to=settings.AUTH_USER_MODEL, verbose_name='Purchaser')),
            ],
            options={
                'verbose_name': 'Order',
                'verbose_name_plural': 'Orders',
                'ordering': ('-updated_at',),
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date and time of creation')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date and time of last update')),
                ('amount', models.PositiveIntegerField(verbose_name='Total sum')),
                ('payment_method', models.IntegerField(choices=[(0, 'Cash'), (1, 'Card')], verbose_name='Payment method')),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='payment', to='orders.order', verbose_name='Order')),
            ],
            options={
                'verbose_name': 'Payment',
                'verbose_name_plural': 'Payments',
                'ordering': ('-updated_at',),
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date and time of creation')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date and time of last update')),
                ('name', models.CharField(max_length=254, verbose_name='Name of the product')),
                ('description', models.TextField(verbose_name="Product's description")),
                ('price', models.PositiveIntegerField(verbose_name="Product's price")),
                ('photo_url', models.URLField(max_length=254, verbose_name='Photo URL')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='orders.category', verbose_name="Product's category")),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
                'ordering': ('-updated_at',),
            },
        ),
        migrations.CreateModel(
            name='OrderProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveSmallIntegerField(verbose_name='Number of products')),
                ('price', models.PositiveIntegerField(verbose_name='Price for all the products')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_products', to='orders.order', verbose_name='Order')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_products', to='orders.product', verbose_name='Product')),
            ],
            options={
                'verbose_name': "Order's product",
                'verbose_name_plural': "Orders' products",
                'ordering': ('-id',),
            },
        ),
        migrations.AddField(
            model_name='order',
            name='products',
            field=models.ManyToManyField(blank=True, related_name='orders', through='orders.OrderProduct', to='orders.product', verbose_name='Products'),
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveSmallIntegerField(verbose_name='Quantity')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cart_items', to='orders.product', verbose_name='Product')),
            ],
            options={
                'verbose_name': 'Cart item',
                'verbose_name_plural': 'Carts items',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date and time of creation')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date and time of last update')),
                ('rating', models.PositiveSmallIntegerField(validators=[django.core.validators.MaxValueValidator(limit_value=5, message='Max rating cannot exceed 5 stars')])),
                ('comment', models.TextField(blank=True, null=True, verbose_name="User's left comment")),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='orders.product', verbose_name='Reviewed product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to=settings.AUTH_USER_MODEL, verbose_name='User who left review')),
            ],
            options={
                'verbose_name': 'Review',
                'verbose_name_plural': 'Reviews',
                'ordering': ('-updated_at',),
            },
        ),
        migrations.CreateModel(
            name='ShoppingCart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date and time of creation')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date and time of last update')),
                ('products', models.ManyToManyField(blank=True, related_name='belonged_shopping_carts', through='orders.CartItem', to='orders.product', verbose_name='Products')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='shopping_cart', to=settings.AUTH_USER_MODEL, verbose_name='Owner')),
            ],
            options={
                'verbose_name': 'Shopping cart',
                'verbose_name_plural': 'Shopping carts',
                'ordering': ('-updated_at',),
            },
        ),
        migrations.AddField(
            model_name='cartitem',
            name='cart',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cart_items', to='orders.shoppingcart', verbose_name='Cart'),
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date and time of creation')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date and time of last update')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name="City's name")),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cities', to='orders.state', verbose_name='State')),
            ],
            options={
                'verbose_name': 'City',
                'verbose_name_plural': 'Cities',
                'ordering': ('-updated_at',),
            },
        ),
        migrations.CreateModel(
            name='UserAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date and time of creation')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date and time of last update')),
                ('street_name', models.CharField(max_length=200, verbose_name='Street name')),
                ('zip_code', models.CharField(max_length=10, verbose_name='ZIP code')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='addresses', to='orders.city', verbose_name='City')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='addresses', to=settings.AUTH_USER_MODEL, verbose_name='User who lives here')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddConstraint(
            model_name='orderproduct',
            constraint=models.UniqueConstraint(fields=('order', 'product'), name='unique_order_product'),
        ),
        migrations.AddConstraint(
            model_name='cartitem',
            constraint=models.UniqueConstraint(fields=('cart', 'product'), name='unique_cart_product'),
        ),
    ]
